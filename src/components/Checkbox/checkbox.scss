@import '../../sass/utilities/mixins/flex-box';
@import '../../sass/utilities/functions/to-rem';
@import '../../sass/base/fonts';
@import '../../sass/variables';

// Checkmark box instead of native input type='checkbox'
.checkmark {
  &--default {
    opacity: 0; // is visible for screen readers
    position: absolute;
  }

  &--custom {
    border: 2px solid $violet-700;
    border-radius: to-rem(4);
    display: inline-block;
    height: to-rem(24);
    width: to-rem(24);

    &.checked {
      background-color: $violet-700;

      &::after {
        align-self: center;
        color: $white-400;
        content: 'âœ”';
        display: inline-grid;
        font-size: to-rem(16);
        height: to-rem(20);
        position: absolute;
        text-align: center;
        width: to-rem(20);
      }
    }
  }
}

.checkbox {
  @include flex-box(row, flex-start, center);

  height: to-rem(75);
  width: 100%;

  &__checkmark--container {
    height: 100%;
    @include flex-box(row, center, start);
  }

  &__text {
    font-size: $paragraph-l;
    height: 100%;
    line-height: 1.15;
    margin: 0 to-rem(25);
  }

  // STATES

  //When focused with TAB key
  &:focus-visible {
    border: 4px dashed $orange-200;
    border-radius: to-rem(5);
    outline: none;
    padding: to-rem(2);
  }

  //When hovering with mouse
  &:hover {
    cursor: pointer;

    .checkmark--custom {
      animation: checkmarkOnHover 1s ease-in-out infinite;

      &.checked {
        animation: none;
      }
    }

    p {
      font-weight: 600;
    }
  }

  // When pressed
  &:active {
    p {
      color: $violet-700;
    }
  }
}

@keyframes checkmarkOnHover {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
  }
}
